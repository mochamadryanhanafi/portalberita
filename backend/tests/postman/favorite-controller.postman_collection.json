{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Wanderlust - Favorite Controller Tests",
    "description": "API tests for the favorite-controller endpoints in the Wanderlust application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful login",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has access_token cookie\", function () {",
                  "    pm.expect(pm.cookies.has('access_token')).to.be.true;",
                  "});",
                  "",
                  "// Store the token for later use",
                  "if (pm.cookies.has('access_token')) {",
                  "    pm.collectionVariables.set(\"access_token\", pm.cookies.get('access_token'));",
                  "}",
                  "",
                  "// Store user ID for later use",
                  "const responseJson = pm.response.json();",
                  "if (responseJson && responseJson.data && responseJson.data.user && responseJson.data.user._id) {",
                  "    pm.collectionVariables.set(\"user_id\", responseJson.data.user._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/email-password/signin",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "email-password", "signin"]
            },
            "description": "Login to get authentication token for subsequent requests"
          }
        },
        {
          "name": "Google OAuth Login - Initiate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful redirect to Google",
                  "pm.test(\"Status code is 302 (Redirect)\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "// Check for redirect URL in headers",
                  "pm.test(\"Response has Location header with Google URL\", function () {",
                  "    pm.response.to.have.header('Location');",
                  "    const locationHeader = pm.response.headers.get('Location');",
                  "    pm.expect(locationHeader).to.include('accounts.google.com');",
                  "});",
                  "",
                  "// Extract and store the redirect URL for manual navigation",
                  "if (pm.response.headers.has('Location')) {",
                  "    const googleAuthUrl = pm.response.headers.get('Location');",
                  "    pm.collectionVariables.set(\"google_auth_url\", googleAuthUrl);",
                  "    console.log('Google Auth URL: ' + googleAuthUrl);",
                  "    console.log('Please manually navigate to this URL in a browser to complete authentication');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/google",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "google"]
            },
            "description": "Initiate Google OAuth login flow"
          }
        },
        {
          "name": "Google OAuth Login - Callback",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful login via Google",
                  "pm.test(\"Status code is 200 or 302\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test(\"Response has access_token cookie\", function () {",
                  "    pm.expect(pm.cookies.has('access_token')).to.be.true;",
                  "});",
                  "",
                  "// Store the token for later use",
                  "if (pm.cookies.has('access_token')) {",
                  "    pm.collectionVariables.set(\"access_token\", pm.cookies.get('access_token'));",
                  "}",
                  "",
                  "// Store user ID for later use if available in response",
                  "try {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson && responseJson.data && responseJson.data.user && responseJson.data.user._id) {",
                  "        pm.collectionVariables.set(\"user_id\", responseJson.data.user._id);",
                  "    }",
                  "} catch (e) {",
                  "    console.log('Response is not JSON or does not contain user data');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/google/callback?code={{google_auth_code}}&state={{google_auth_state}}",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "google", "callback"],
              "query": [
                {
                  "key": "code",
                  "value": "{{google_auth_code}}"
                },
                {
                  "key": "state",
                  "value": "{{google_auth_state}}"
                }
              ]
            },
            "description": "Handle Google OAuth callback with authorization code"
          }
        }
      ]
    },
    {
      "name": "Favorites",
      "item": [
        {
          "name": "Add to Favorites",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful addition to favorites",
                  "pm.test(\"Status code is 201 (Created) or 200 (Already saved)\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201, 200]);",
                  "});",
                  "",
                  "pm.test(\"Response has success flag set to true\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response contains appropriate message\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    if (pm.response.code === 201) {",
                  "        pm.expect(responseJson.message).to.equal('Post saved successfully');",
                  "    } else if (pm.response.code === 200) {",
                  "        pm.expect(responseJson.message).to.equal('Post is already saved');",
                  "    }",
                  "});",
                  "",
                  "// Store favorite ID if available for later use",
                  "const responseJson = pm.response.json();",
                  "if (responseJson && responseJson.favorite && responseJson.favorite.news) {",
                  "    pm.collectionVariables.set(\"saved_news_id\", responseJson.favorite.news);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"newsId\": \"{{news_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/favorites",
              "host": ["{{base_url}}"],
              "path": ["api", "favorites"]
            },
            "description": "Add a news article to user's favorites"
          }
        },
        {
          "name": "Check Is Favorite",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful check",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success flag set to true\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response contains isSaved property\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('isSaved');",
                  "    pm.expect(responseJson.isSaved).to.be.a('boolean');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/favorites/check/{{news_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "favorites", "check", "{{news_id}}"]
            },
            "description": "Check if a news article is in user's favorites"
          }
        },
        {
          "name": "Get User Favorites",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful retrieval",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success flag set to true\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response contains savedPosts array\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('savedPosts');",
                  "    pm.expect(responseJson.savedPosts).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Response contains pagination information\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('pagination');",
                  "    pm.expect(responseJson.pagination).to.have.property('total');",
                  "    pm.expect(responseJson.pagination).to.have.property('page');",
                  "    pm.expect(responseJson.pagination).to.have.property('limit');",
                  "    pm.expect(responseJson.pagination).to.have.property('pages');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/favorites?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "favorites"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all favorite news articles for the logged-in user"
          }
        },
        {
          "name": "Remove from Favorites",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful removal",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success flag set to true\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response contains appropriate message\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.message).to.equal('Post removed from saved items');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/favorites/{{news_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "favorites", "{{news_id}}"]
            },
            "description": "Remove a news article from user's favorites"
          }
        }
      ],
      "auth": {
        "type": "apikey",
        "apikey": [
          {
            "key": "value",
            "value": "{{access_token}}",
            "type": "string"
          },
          {
            "key": "key",
            "value": "Cookie",
            "type": "string"
          },
          {
            "key": "in",
            "value": "header",
            "type": "string"
          }
        ]
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "news_id",
      "value": "6507f803a177e2b0ab0b1234",
      "type": "string",
      "description": "Replace with a valid news ID from your database"
    },
    {
      "key": "saved_news_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "google_auth_url",
      "value": "",
      "type": "string",
      "description": "URL for Google OAuth authentication flow"
    },
    {
      "key": "google_auth_code",
      "value": "",
      "type": "string",
      "description": "Authorization code received from Google OAuth"
    },
    {
      "key": "google_auth_state",
      "value": "",
      "type": "string",
      "description": "State parameter for Google OAuth security verification"
    }
  ]
}